<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Blog</title>
    <link>http://yanzewei.github.io/post/</link>
    <description>Recent content in Posts on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Nov 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://yanzewei.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>linux管理命令札记</title>
      <link>http://yanzewei.github.io/post/network-command/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://yanzewei.github.io/post/network-command/</guid>
      <description>

&lt;h2 id=&#34;netstat查看端口是否被占用:d4a925e2a9bec01f30bb498499c4c818&#34;&gt;netstat查看端口是否被占用&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;例:nestat -anp | grep &amp;lsquo;8088&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dig与ping:d4a925e2a9bec01f30bb498499c4c818&#34;&gt;dig与ping&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;dig全称是dns information groper.可以查看域名对应的dns节点,如dig www.baidu.com.ping只能返回最近的一个节点.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>初学git的几点疑问</title>
      <link>http://yanzewei.github.io/post/git-usage/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://yanzewei.github.io/post/git-usage/</guid>
      <description>

&lt;h2 id=&#34;工作区-与-暂存区的区别-以及-git-commit-与-git-push的区别:4b413fdebfe42d43590394b35a48620b&#34;&gt;工作区 与 暂存区的区别 以及 git commit 与 git push的区别&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;工作区就是你电脑能看到的。&lt;/p&gt;

&lt;p&gt;工作区里有个.git的隐藏目录。它就是所谓的版本库。几乎所有的git存储和操作的内容都位于其下。如果想备份库，注意要将其拷贝到其它地方。它里面就包含了stage(或叫index) files的暂存区。git会为我们创建第一个分支,叫master，以及有个指向master的指针Head&lt;/p&gt;

&lt;p&gt;要强调一点。
&lt;strong&gt;&lt;em&gt;git保存的不是文件差异或变化量&lt;/em&gt;&lt;/strong&gt;
，而是
&lt;strong&gt;&lt;em&gt;一系列快照&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;git add 的时候会把文件修改提交到暂存区。&lt;/p&gt;

&lt;p&gt;git commit 的时候才把其提交到master.这个只是保存到了本地的版本库&lt;/p&gt;

&lt;p&gt;git push 的时候会把修改提交到远程版本库。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;git-rm-与-rm的区别:4b413fdebfe42d43590394b35a48620b&#34;&gt;git rm 与 rm的区别&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;rm是物理删除掉工作区的文件。之后要执行git commit -am &amp;ldquo;msg&amp;rdquo;,其中a参数表示all,提交所有删除和修改的文件,但新增的不算.&lt;/p&gt;

&lt;p&gt;执行完上面的操作就相当于执行了git rm.&lt;/p&gt;

&lt;p&gt;那万一把工作区文件删错了,想恢复咋办.先执行git status,它会提示你Changes not staged for commit里deleted的文件有哪些,例如test.txt.然后你可以通过执行git checkout &amp;ndash;test.txt,删掉如果是文件夹也可以有这个命令恢复.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;在自己库再引入其它的库-怎么办:4b413fdebfe42d43590394b35a48620b&#34;&gt;在自己库再引入其它的库,怎么办&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;git clone 是不行的,提交时会报错.应该用git submodule add命令.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;如何解决冲突:4b413fdebfe42d43590394b35a48620b&#34;&gt;如何解决冲突&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;修改前没先git pull,导致了push时出现冲突.这时只要人工合并下冲突,再commit,再push就行.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>